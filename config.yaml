# procmate 进程伴侣配置文件
# 该文件用于定义和管理所有需要被监控和管理的组件与服务。

# 基础配置
settings:
  # 运行时文件的根目录 (用于存放 pid 和 logs)
  runtime_dir: /tmp/procmate
  # 默认的启动超时时间 (秒)
  default_start_timeout_sec: 60
  # 默认的停止超时时间 (秒)
  default_stop_timeout_sec: 10
  # 'watch' 命令的轮询周期 (秒)
  watch_interval_sec: 10
  # 日志配置
  log_options:
    max_size_mb: 10000 # 在轮转之前，日志文件的最大大小（以MB为单位）
    max_backups: 10 # 保留的旧日志文件的最大数量
    max_age_days: 30 # 保留旧日志文件的最大天数
    compress: true # 是否压缩/归档旧日志文件
    localTime: true # 使用本地时间创建时间戳

# 组件列表 (按启动顺序排列)
processes:
  # 示例: 一个模拟的Web服务器
  - name: web-server-1
    group: web
    command: "while true; do { echo -e 'HTTP/1.1 200 OK\\r\\n\\r\\nHello from web-server-1'; } | nc -l -p 8080; done"
    workdir: "/tmp"
    enabled: true
    port: 8080
    # 这个进程使用自定义的停止超时
    stop_timeout_sec: 15
    depends_on:
     - api-server-1

  # 示例: 另一个模拟的API服务
  - name: api-server-1
    group: api
    command: "while true; do { echo -e 'HTTP/1.1 200 OK\\r\\n\\r\\nHello from api-server-2'; } | nc -l -p 8081; done"
    workdir: "/tmp"
    enabled: true
    port: 8081
    # ===> 为这个进程注入环境变量
    environment:
      API_KEY: "your-secret-key"
      GIN_MODE: "release"

  # 示例: 一个持续输出标准日志的服务
  - name: log-emitter
    group: testing
    command: 'while true; do echo "INFO: Heartbeat signal from log-emitter at $(date)"; sleep 2; done | awk ''{ print; fflush() }'''
    workdir: "/tmp"
    enabled: true

  # 示例: 一个持续输出错误日志的服务
  - name: error-emitter
    group: testing
    command: 'while true; do echo "ERROR: A simulated critical failure occurred at $(date)"; sleep 5; done > >(awk ''{ print > "/dev/stderr"; fflush() }'') 2>&1'
    workdir: "/tmp"
    enabled: true

  # 示例: 一个被禁用的进程
  # enabled: false 意味着 procmate 在执行任何操作时都会忽略这个进程。
  # 这对于我们测试程序的筛选逻辑很有帮助。
  - name: disabled-process
    group: examples
    command: "sleep 3600"
    workdir: "/tmp"
    enabled: false
